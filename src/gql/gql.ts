/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  query getNotifications($userId: Int!) {\n    uuid(id: $userId) {\n      __typename\n      ... on User {\n        language\n      }\n    }\n    notifications(\n      first: 500\n      unread: true\n      emailSent: false\n      email: true\n      userId: $userId\n    ) {\n      nodes {\n        id\n        event {\n          ... on AbstractNotificationEvent {\n            date\n            id\n            __typename\n            actor {\n              id\n              username\n              isActiveAuthor\n              isActiveDonor\n              isActiveReviewer\n            }\n            objectId\n            ... on CheckoutRevisionNotificationEvent {\n              revision {\n                id\n              }\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              reason\n            }\n            ... on CreateCommentNotificationEvent {\n              comment {\n                id\n              }\n              thread {\n                id\n                title\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n                comment: comments(last: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n            }\n            ... on CreateEntityNotificationEvent {\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityRevisionNotificationEvent {\n              entityRevision {\n                id\n                ... on AppletRevision {\n                  changes\n                }\n                ... on ArticleRevision {\n                  changes\n                }\n                ... on CourseRevision {\n                  changes\n                }\n                ... on CoursePageRevision {\n                  changes\n                }\n                ... on EventRevision {\n                  changes\n                }\n                ... on ExerciseRevision {\n                  changes\n                }\n                ... on ExerciseGroupRevision {\n                  changes\n                }\n                ... on VideoRevision {\n                  changes\n                }\n              }\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateThreadNotificationEvent {\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RejectRevisionNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              revision {\n                id\n                alias\n              }\n              reason\n            }\n            ... on RemoveEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RemoveTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetLicenseNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyParentNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              previousParent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              optionalParent: parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetThreadStateNotificationEvent {\n              archived\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n              }\n            }\n            ... on SetUuidStateNotificationEvent {\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n              }\n              trashed\n            }\n          }\n        }\n      }\n    }\n  }\n": types.GetNotificationsDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query getNotifications($userId: Int!) {\n    uuid(id: $userId) {\n      __typename\n      ... on User {\n        language\n      }\n    }\n    notifications(\n      first: 500\n      unread: true\n      emailSent: false\n      email: true\n      userId: $userId\n    ) {\n      nodes {\n        id\n        event {\n          ... on AbstractNotificationEvent {\n            date\n            id\n            __typename\n            actor {\n              id\n              username\n              isActiveAuthor\n              isActiveDonor\n              isActiveReviewer\n            }\n            objectId\n            ... on CheckoutRevisionNotificationEvent {\n              revision {\n                id\n              }\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              reason\n            }\n            ... on CreateCommentNotificationEvent {\n              comment {\n                id\n              }\n              thread {\n                id\n                title\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n                comment: comments(last: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n            }\n            ... on CreateEntityNotificationEvent {\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityRevisionNotificationEvent {\n              entityRevision {\n                id\n                ... on AppletRevision {\n                  changes\n                }\n                ... on ArticleRevision {\n                  changes\n                }\n                ... on CourseRevision {\n                  changes\n                }\n                ... on CoursePageRevision {\n                  changes\n                }\n                ... on EventRevision {\n                  changes\n                }\n                ... on ExerciseRevision {\n                  changes\n                }\n                ... on ExerciseGroupRevision {\n                  changes\n                }\n                ... on VideoRevision {\n                  changes\n                }\n              }\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateThreadNotificationEvent {\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RejectRevisionNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              revision {\n                id\n                alias\n              }\n              reason\n            }\n            ... on RemoveEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RemoveTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetLicenseNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyParentNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              previousParent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              optionalParent: parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetThreadStateNotificationEvent {\n              archived\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n              }\n            }\n            ... on SetUuidStateNotificationEvent {\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n              }\n              trashed\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query getNotifications($userId: Int!) {\n    uuid(id: $userId) {\n      __typename\n      ... on User {\n        language\n      }\n    }\n    notifications(\n      first: 500\n      unread: true\n      emailSent: false\n      email: true\n      userId: $userId\n    ) {\n      nodes {\n        id\n        event {\n          ... on AbstractNotificationEvent {\n            date\n            id\n            __typename\n            actor {\n              id\n              username\n              isActiveAuthor\n              isActiveDonor\n              isActiveReviewer\n            }\n            objectId\n            ... on CheckoutRevisionNotificationEvent {\n              revision {\n                id\n              }\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              reason\n            }\n            ... on CreateCommentNotificationEvent {\n              comment {\n                id\n              }\n              thread {\n                id\n                title\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n                comment: comments(last: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n            }\n            ... on CreateEntityNotificationEvent {\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateEntityRevisionNotificationEvent {\n              entityRevision {\n                id\n                ... on AppletRevision {\n                  changes\n                }\n                ... on ArticleRevision {\n                  changes\n                }\n                ... on CourseRevision {\n                  changes\n                }\n                ... on CoursePageRevision {\n                  changes\n                }\n                ... on EventRevision {\n                  changes\n                }\n                ... on ExerciseRevision {\n                  changes\n                }\n                ... on ExerciseGroupRevision {\n                  changes\n                }\n                ... on VideoRevision {\n                  changes\n                }\n              }\n              entity {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on CreateThreadNotificationEvent {\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                    content\n                  }\n                }\n              }\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RejectRevisionNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              revision {\n                id\n                alias\n              }\n              reason\n            }\n            ... on RemoveEntityLinkNotificationEvent {\n              parent {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on RemoveTaxonomyLinkNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetLicenseNotificationEvent {\n              repository {\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyParentNotificationEvent {\n              child {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              previousParent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n              optionalParent: parent {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetTaxonomyTermNotificationEvent {\n              taxonomyTerm {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n              }\n            }\n            ... on SetThreadStateNotificationEvent {\n              archived\n              thread {\n                id\n                thread: comments(first: 1) {\n                  nodes {\n                    id\n                  }\n                }\n              }\n            }\n            ... on SetUuidStateNotificationEvent {\n              object {\n                ... on AbstractUuid {\n                  __typename\n                  id\n                  title\n                  alias\n                }\n                ... on AbstractUuid {\n                  ... on Exercise {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                  ... on ExerciseGroup {\n                    taxonomyTerms {\n                      nodes {\n                        type\n                      }\n                    }\n                  }\n                }\n              }\n              trashed\n            }\n          }\n        }\n      }\n    }\n  }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;